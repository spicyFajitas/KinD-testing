#jinja2: lstrip_blocks: True
# {{ ansible_managed }}
# Source: https://github.com/netbox-community/netbox-docker/blob/release/docker-compose.yml

version: '3.4'
services:
  netbox: &netbox
    image: {{ netbox_image }}
    depends_on:
      - postgres
      - redis
      - redis-cache
      - netbox-worker
    env_file: env/netbox.env
    user: '101'
    volumes:
      - ./reports:/etc/netbox/reports:z,ro
      - ./scripts:/etc/netbox/scripts:z,ro
      - ./extra.py:/etc/netbox/config/extra.py:ro
      - netbox-media-files:/opt/netbox/netbox/media:z
    security_opt:
      - seccomp:unconfined
    {% if netbox_port %}
    ports:
      - "{{ netbox_port }}:8080"
    {% else %}
    expose:
      - "8080"
    {% endif %}
    restart: unless-stopped
    {% if container_labels %}
    labels:
      {{ container_labels | to_nice_yaml | indent(6) }}
    {% endif %}
    networks:
      - default
    {% if proxy_network_name %}
      - proxy
    {% endif %}

  netbox-worker:
    <<: *netbox
    depends_on:
      - redis
    entrypoint:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
    command:
      - rqworker
    ports: []
    expose: []
    labels: []
    networks:
      - default
    restart: unless-stopped

  netbox-housekeeping:
    <<: *netbox
    depends_on:
      - redis
      - postgres
    ports: []
    expose: []
    labels: []
    command:
      - /opt/netbox/housekeeping.sh

  postgres:
    image: {{ postgres_image }}
    env_file: env/postgres.env
    volumes:
      - netbox-postgres-data:/var/lib/postgresql/data
    networks:
      - default
    restart: unless-stopped

  redis:
    image: {{ redis_image }}
    command:
      - sh
      - -c # this is to evaluate the $REDIS_PASSWORD from the env
      - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: env/redis.env
    volumes:
      - netbox-redis-data:/data
    networks:
      - default
    restart: unless-stopped

  redis-cache:
    image: {{ redis_image }}
    command:
      - sh
      - -c # this is to evaluate the $REDIS_PASSWORD from the env
      - redis-server --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: env/redis-cache.env
    networks:
      - default
    restart: unless-stopped

volumes:
  netbox-media-files:
    driver: local
  netbox-postgres-data:
    driver: local
  netbox-redis-data:
    driver: local

{% if proxy_network_name %}
networks:
  proxy:
    external:
      name: {{ proxy_network_name }}
{% endif %}
